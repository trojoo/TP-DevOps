name: Python CI/CD

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test-and-lint:
    runs-on: ubuntu-latest
    env:
      FLASK_ENV: testing
      # Sentry desactivado en pruebas
      SENTRY_DSN: ""
      
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt  # Instala desde archivo
        pip install flake8
        
    - name: Run linter
      run: |
        flake8 src/ tests/ --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 src/ tests/ --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
        
    - name: Run unit tests
      run: pytest tests/ -v  # Ejecutar todos los tests en directorio tests/
      
  docker-build-push:
    needs: test-and-lint
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      with:
        driver-opts: |
          image=moby/buildkit:master
      
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: |
          ${{ secrets.DOCKER_USERNAME }}/tp-devops:latest
          ${{ secrets.DOCKER_USERNAME }}/tp-devops:1.0.${{ github.run_number }} 
        build-args: |
          APP_VERSION=1.0.${{ github.run_number }}

  deploy-render:
    needs: docker-build-push
    runs-on: ubuntu-latest
    steps:
    - name: Trigger Render Deployment via Webhook
      run: |
        curl -X POST \
          "${{ secrets.RENDER_DEPLOY_WEBHOOK_URL }}"
        
    - name: Verify deployment
      run: |
        APP_URL="https://${{ secrets.RENDER_SERVICE_NAME }}.onrender.com/health"
        VERSION="1.0.${{ github.run_number }}"
        
        # Esperar 3 minutos (Render free tarda en iniciar)
        echo "Esperando 180 segundos para la actualización..."
        sleep 180
        
        # Verificar endpoint de salud con versión
        curl -f "$APP_URL?version=$VERSION" || exit 1
